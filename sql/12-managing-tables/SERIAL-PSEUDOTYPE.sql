/*
    Author: David Castrill√≥n
    Date: 2023
*/

/*
    -- SERIAL PSEUDOTYPE

    - In PostgreSQL, a sequence is a special kind of database object that generates a sequence of integers. A sequence
        is often used as the primary key column in a table.

    - By assigning the SERIAL pseudo-type to a column, PostgreSQL performs the following:
        - First, create a sequence object and set the next value generated by the sequence as the default value for
            the column.
        - Second, add a NOT NULL constraint to the id column because a sequence always generates an integer, which is a
            non-null value.
        - Third, assign the owner of the sequence to the id column; as a result, the sequence object is deleted when
            the id column or table is dropped

    - It is important to note that the SERIAL does not implicitly create an index on the column or make the column as
        the primary key column. However, this can be done easily by specifying the PRIMARY KEY constraint for
        the SERIAL column.
*/

CREATE TABLE fruits (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL
);

-- To assign the default value for a serial column when you insert row into the table, you ignore the column name
-- or use the DEFAULT keyword in the INSERT statement.

INSERT INTO fruits (name)
VALUES ('Orange');

INSERT INTO fruits (id, name)
VALUES (DEFAULT, 'Apple');

SELECT * FROM fruits;

-- To get the sequence name of a SERIAL column in a table, you use the pg_get_serial_sequence() function as follows:
SELECT pg_get_serial_sequence('fruits', 'id');

-- You can pass a sequence name to the  currval() function to get the recent value generated by the sequence.
SELECT currval(pg_get_serial_sequence('fruits', 'id'));

-- If you want to get the value generated by the sequence when you insert a new row into the table, you use the
-- RETURNING id clause in the INSERT statement.
INSERT INTO fruits(name)
VALUES ('Banana')
RETURNING id;

-- cleanup
DROP TABLE fruits;